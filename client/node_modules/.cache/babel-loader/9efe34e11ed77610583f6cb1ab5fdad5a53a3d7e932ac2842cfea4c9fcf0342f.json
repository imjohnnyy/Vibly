{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ldong\\\\Vibly\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n//The protected route component allows only the\n// authorized users (logged in users) to access the home page (look at App.js).\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [readyToRender, setReadyToRender] = useState(false);\n  const [userData, setUserData] = useState(null);\n\n  //Calling the 'get-user-data' api and sending the 'headers' which are the tokens in the form of authorization\n  const getUserData = async () => {\n    try {\n      const response = await axios.post(\"/api/users/get-user-data\", {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}` //We will decode this authorization token in the backend,\n        } //If is successful, then data is sent to the UI from the backend\n      });\n\n      if (response.data.success) {\n        setUserData(response.data.data);\n      } else {\n        alert(response.data.message);\n      }\n      setReadyToRender(true);\n    } catch (error) {\n      setReadyToRender(true);\n      navigate(\"/login\");\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (userData === null) {\n      getUserData(); // Invokes the getUserData function every time the page renders\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: readyToRender ? children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ProtectedRoute, \"iJQ2RgicsFYadurY4iGzYLagh6s=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","ProtectedRoute","children","navigate","readyToRender","setReadyToRender","userData","setUserData","getUserData","response","post","headers","Authorization","localStorage","getItem","data","success","alert","message","error","console","log"],"sources":["C:/Users/ldong/Vibly/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//The protected route component allows only the\r\n// authorized users (logged in users) to access the home page (look at App.js).\r\nfunction ProtectedRoute({ children }) {\r\n  const navigate = useNavigate();\r\n  const [readyToRender, setReadyToRender] = useState(false);\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  //Calling the 'get-user-data' api and sending the 'headers' which are the tokens in the form of authorization\r\n  const getUserData = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"/api/users/get-user-data\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`, //We will decode this authorization token in the backend,\r\n          }, //If is successful, then data is sent to the UI from the backend\r\n        }\r\n      );\r\n      if (response.data.success) {\r\n        setUserData(response.data.data);\r\n      } else {\r\n        alert(response.data.message);\r\n      }\r\n      setReadyToRender(true);\r\n    } catch (error) {\r\n      setReadyToRender(true);\r\n      navigate(\"/login\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData === null) {\r\n      getUserData(); // Invokes the getUserData function every time the page renders\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* If readyToRender is true then we will display the children, else 'Loading' will be displayed */}\r\n      {readyToRender ? children : <div>Loading...</div>}\r\n    </div>\r\n  );\r\n}\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AAAA;AACA,SAASC,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAClC,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMW,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,0BAA0B,EAC1B,CAAC,CAAC,EACF;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC,CAAE;QAC5D,CAAC,CAAE;MACL,CAAC,CACF;;MACD,IAAIL,QAAQ,CAACM,IAAI,CAACC,OAAO,EAAE;QACzBT,WAAW,CAACE,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;MACjC,CAAC,MAAM;QACLE,KAAK,CAACR,QAAQ,CAACM,IAAI,CAACG,OAAO,CAAC;MAC9B;MACAb,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdd,gBAAgB,CAAC,IAAI,CAAC;MACtBF,QAAQ,CAAC,QAAQ,CAAC;MAClBiB,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,KAAK,IAAI,EAAE;MACrBE,WAAW,EAAE,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UAEGJ,aAAa,GAAGF,QAAQ,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAqB;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEV;AAAC,GA1CQD,cAAc;EAAA,QACJD,WAAW;AAAA;AAAA,KADrBC,cAAc;AA2CvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}